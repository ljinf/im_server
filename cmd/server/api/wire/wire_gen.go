// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wire

import (
	"github.com/google/wire"
	"github.com/ljinf/im_server/internal/api/handler"
	"github.com/ljinf/im_server/internal/api/server"
	"github.com/ljinf/im_server/internal/api/service"
	"github.com/ljinf/im_server/pkg/app"
	"github.com/ljinf/im_server/pkg/jwt"
	"github.com/ljinf/im_server/pkg/log"
	"github.com/ljinf/im_server/pkg/server/http"
	"github.com/ljinf/im_server/pkg/sid"
	"github.com/spf13/viper"
)

// Injectors from wire.go:

func NewWire(viperViper *viper.Viper, logger *log.Logger) (*app.App, func(), error) {
	jwtJWT := jwt.NewJwt(viperViper)
	handlerHandler := handler.NewHandler(logger)
	sidSid := sid.NewSid()
	serviceService := service.NewService(logger, sidSid, jwtJWT)
	accountApiService := service.NewAccountApiService(serviceService)
	accountApiHandler := handler.NewAccountApiHandler(handlerHandler, accountApiService)
	httpServer := server.NewAccountApiServer(logger, viperViper, jwtJWT, accountApiHandler)
	appApp := newApp(httpServer)
	return appApp, func() {
	}, nil
}

// wire.go:

var sidSet = wire.NewSet(sid.NewSid)

var jwtSet = wire.NewSet(jwt.NewJwt)

var serviceSet = wire.NewSet(service.NewService, service.NewAccountApiService)

var handlerSet = wire.NewSet(handler.NewHandler, handler.NewAccountApiHandler)

var serverSet = wire.NewSet(server.NewAccountApiServer)

// build App
func newApp(
	accountApi *http.Server,
) *app.App {
	return app.NewApp(app.WithServer(accountApi), app.WithName("api-servers"))
}
